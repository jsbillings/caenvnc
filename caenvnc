#!/usr/bin/wish

# 03/01/2008 - 1.0 - Limited Release [jhufnage]
# 04/08/2008 - 1.1 - Added versioning information to the title bar [jhufnage]
# 11/16/2009 - 1.2 - Enabled varable resolution [jhufnage]
# 12/16/2009 - 2.0 - Wrapped using TclKit/StarKit
# 04/16/2012 - 1.3 - Modified for RPM packaging
# 05/17/2012 - 2.3 - Updated plink and added -batch command line option to plink
# 09/19/2012 - 2.4 - Updated plink to portable plink 0.62 which properly supports "-ssh <hostname>"
#					 and query WMI for DEP support
# 01/14/2013 - 2.5 - Updated to Suspect (removed expect dependencies) for Windows 8 compatability
#					 Removed DEP check since Expect is not used
# 08/30/2013 - 3.0 - Added support for MToken and additional ECAD hosts
# 09/04/2013 - 3.0 - Ported to Linux and Linux Packaging again.

package provide app-sshnew 1.0
package require Expect

wm title . "CAEN VNC v3.0"
wm iconname . "CAENVNC"
wm resizable . 0 0

set URL "http://www.engin.umich.edu/caen/connect/vnc.html"
set v_currentresh "[expr {[winfo screenwidth .]}]"
set v_currentresv "[expr {[winfo screenheight .]}]"
set v_username "$::env(USERNAME)"
set v_password ""
set v_token ""
set v_hostname "vnc.engin.umich.edu"
set scriptdir [file dirname [info script]]

#####################################################################
# Configure Hostname label and text box
#####################################################################
frame  .hostname -bd 2
label  .hostname.label -text Hostname: -width 10 -anchor w
ttk::combobox .hostname.combobox -textvariable v_hostname -values "vnc.engin.umich.edu vnc-twofactor.engin.umich.edu vnc-oncampus.engin.umich.edu" 
pack   .hostname.label -side left
pack   .hostname.combobox  -side left

#####################################################################
# Configure Login label and text box
#####################################################################
frame  .username -bd 2
label  .username.label -text Username: -width 10 -anchor w
entry  .username.entry -relief sunken
.username.entry config -textvariable v_username 
pack   .username.label -side left
pack   .username.entry -side left

#####################################################################
# Configure Password label and text box
#####################################################################
frame  .password -bd 2
label  .password.label -text Password: -width 10 -anchor w
entry  .password.entry -relief sunken
.password.entry config -textvariable v_password -show "*" 
pack   .password.label -side left
pack   .password.entry -side left

#####################################################################
# Configure MToken label and text box
#####################################################################
frame  .token -bd 2
label  .token.label -text MToken: -width 10 -anchor w
entry  .token.entry -relief sunken
.token.entry config -textvariable v_token -show "*"
pack   .token.label -side left
pack   .token.entry -side left

#####################################################################
# Configure Resolution label and list box
#####################################################################
frame  .screenres -bd 2
label  .screenres.reslabel -text Resolution: -width 10 -anchor w
ttk::combobox .screenres.comboboxh -width 5 -textvariable v_currentresh -values "800 1024 1280 1400 1600 1680 1920 2560"
label  .screenres.xlabel -text x -width 1 -anchor w
ttk::combobox .screenres.comboboxv -width 5 -textvariable v_currentresv -values "600 768 800 1024 1050 1200 1600"
pack   .screenres.reslabel -side left
pack   .screenres.comboboxh  -side left
pack   .screenres.xlabel -side left
pack   .screenres.comboboxv  -side left

####################################################################
# Configure Status label
#####################################################################
frame	.status -bd 2
label	.status.label
pack	.status.label -side left
.status.label config -text "Awaiting credentials..." 

#####################################################################
# Configure Buttons
#####################################################################
frame	.buttons -bd 2
button	.buttons.ok -text "Connect" -borderwidth 1m -command "showScreen \$v_hostname \$v_username \$v_password \$v_token"
button	.buttons.dismiss -text "Cancel" -command "destroy ."
button	.buttons.help -text "Help" -command "exec [auto_execok start] {$URL}"
bind	. <Return> ".buttons.ok invoke"
bind	. <F1> ".buttons.help invoke"
pack	.buttons.ok .buttons.dismiss .buttons.help -side left -expand 1
pack	.buttons -side bottom -fill x -pady 2m

#####################################################################
# Pack everything into the window
#####################################################################
pack	.hostname .username .password .screenres .status .buttons -fill x
##
#
##
proc showMToken {} {
global v_hostname
	if {[string match *twofactor* $v_hostname]} {
		pack .token -after .password -fill x
	} else {
		pack forget .token
	}
}
bind . <<ComboboxSelected>> {showMToken}

#####################################################################
# Focus and Raise window
#####################################################################
focus .password.entry
raise .

set wx [expr {([winfo screenwidth .]-[winfo width .])/2}]
set wy [expr {([winfo screenheight .]-[winfo height .])/2}]
wm geometry . +$wx+$wy

#####################################################################
# Let's run it...
#####################################################################
proc showScreen {ss_host ss_user ss_pass ss_token} {

    global v_currentresh
    global v_currentresv
    global env
    
    # Check for valid resolutions before continuing
    if { [string is integer -strict $v_currentresh] == 0 } {
	.status.label config -text "Fix horizontal resolution!"
	focus .screenres.comboboxh
	return
    }
    if { [string is integer -strict $v_currentresv] == 0 } {
	.status.label config -text "Fix vertical resolution!"
	focus .screenres.comboboxv
	return
    }
    
    .buttons.ok config -state disabled
    
    set env(CAENVNCSIZE) ${v_currentresh}x${v_currentresv}
    set env(CVNCSIZE) ${v_currentresh}x${v_currentresv}
    set env(CAENVNCSIZE) ${v_currentresh}x${v_currentresv}
    set rport   5984
    set lport	5984
    
    # Screen resolution code
    set fs "FullScreen=0"
    if { [string compare "$v_currentresh" "[expr {[winfo screenwidth .]}]"] == 0 } { 
        if { [string compare "$v_currentresv" "[expr {[winfo screenheight .]}]"] == 0 } {
            set fs "FullScreen=1"
        }
    }


    # Show the user we're contacting the host
    .status.label config -text ""
    .status.label config -text [string range "Contacting $ss_host" 0 35]
    
    exp_spawn caenvnchelper -c $ss_host 
    
    expect {
        "Are you sure*"         {exp_send "yes\r"}
        "Enter your MToken Passcode:"   {exp_send "$ss_token\r"}
        "hello*"                        {wm withdraw .;exp_wait; destroy .;exp_close;exit}
    }
    expect {
        "$ss_user*:"             {exp_send "$ss_pass\r"}
        "Password:"             {exp_send "$ss_pass\r"}
        "hello*"                        {wm withdraw .;exp_wait; destroy .;exp_close;exit}
    }
    expect {
        "Permission*"           {exp_close; showErr}
        "hello*"                        {wm withdraw .;exp_wait; destroy .;exp_close;exit}
        eof { }
        timeout {exp_close; showErr "Incorrect password or token" }
    }
}

#####################################################################
# Error conditions (Expect errors can't have arguments
#####################################################################
proc showErr {str_message} {
	.status.label config -text [string range $str_message 0 35]
	.buttons.ok config -state normal
}
proc showEOF {} {
	set done 1
	.status.label config -text "Unexpected Error!"
	.buttons.ok config -state normal
}
proc showTimeout {} {
	set done 1
	.status.label config -text "Timeout!"
	.buttons.ok config -state normal
}
